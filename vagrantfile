# vim: set ai ft=ruby ts=2 sw=2 et!:

$team_count = 1

def provision(config, manifest = 'ctf2014.pp' )
  
  config.vm.provision :puppet do |puppet|
    puppet.manifest_file  = manifest
    puppet.module_path    = "provision/puppet/modules"
    puppet.manifests_path = "provision/puppet/manifests"
    puppet.options        = "--verbose"
  end
end

VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "attacker" do |attacker|
    attacker.vm.box = 'svigneux/kali-linux-1.0.6-amd64-mini'
    attacker.vm.guest = :debian
    attacker.vm.hostname = 'attacker'
    attacker.vm.network :public_network, ip: "10.0.0.10", nic_type: 'virtio', bridge: 'v_attacker', use_dhcp_assigned_default_route: false
    attacker.vm.provider "virtualbox" do |vb|
      vb.customize ['modifyvm', :id, '--nictype1', 'virtio']
      vb.customize ["modifyvm", :id, "--nicpromisc2", 'allow-all']
    end

    provision(attacker)
  end

  # VyOS Router Between attacker network and team networks
  config.vm.define "rAttack" do |rAttack|
    rAttack.vm.box = "svigneux/vyos-1.0.2-amd64"
    rAttack.vm.guest = :debian
    rAttack.vm.hostname = 'rAttack'
    
    # Manually configure virtualization layer 
    rAttack.vm.provider "virtualbox" do |vb|
      vb.customize ['modifyvm', :id, '--chipset', 'ich9']    # support 36 interfaces
      vb.customize ['modifyvm', :id, '--nictype1', 'virtio'] # set virtio for eth0 default interface

      vb.customize ['modifyvm', :id, '--nictype2', 'virtio'] # set virtio for eth1 - v_attacker
      vb.customize ["modifyvm", :id, "--nic2", 'bridged', "--bridgeadapter2", 'v_attacker']

      (1..$team_count).each do |t|
        i=t+2
        vb.customize ["modifyvm", :id, "--nicpromisc#{i}", 'allow-all']
        vb.customize ['modifyvm', :id, "--nictype#{i}", 'virtio'] # set virtio for all interfaces
        vb.customize ["modifyvm", :id, "--nic#{i}", 'bridged', "--bridgeadapter#{i}", "v_dirty_t#{t}"]
      end
    end

    provision(rAttack)

  end

  (1..$team_count).each do |t|
    config.vm.define "team#{t}" do |team|
      team.vm.box = 'svigneux/kali-linux-1.0.6-amd64-mini'
      team.vm.guest = :debian
      team.vm.hostname = "team#{t}"

      team.vm.provider "virtualbox" do |vb|
        vb.customize ['modifyvm', :id, '--nictype1', 'virtio']

        i=2 # bridge interface in:  eth1
        o=3 # bridge interface out: eth2

        vb.customize ['modifyvm', :id, "--nictype#{i}", 'virtio']
        vb.customize ['modifyvm', :id, "--nictype#{o}", 'virtio']
        vb.customize ["modifyvm", :id, "--nicpromisc#{i}", 'allow-all']
        vb.customize ["modifyvm", :id, "--nicpromisc#{o}", 'allow-all']
        vb.customize ["modifyvm", :id, "--nic#{i}", 'bridged', "--bridgeadapter#{i}", "v_dirty_t#{t}"]
        vb.customize ["modifyvm", :id, "--nic#{o}", 'bridged', "--bridgeadapter#{o}", "v_soaked_t#{t}"]

      end

      provision(team)

    end

    config.vm.define "vendor#{t}" do |vendor|
      vendor.vm.box = 'svigneux/kali-linux-1.0.6-amd64-mini'
      vendor.vm.guest = :debian
      vendor.vm.hostname = "vendor#{t}"

      vendor.vm.provider "virtualbox" do |vb|
        vb.customize ['modifyvm', :id, '--nictype1', 'virtio']

        i=2 # bridge interface in:  eth1
        o=3 # bridge interface out: eth2

        vb.customize ['modifyvm', :id, "--nictype#{i}", 'virtio']
        vb.customize ['modifyvm', :id, "--nictype#{o}", 'virtio']
        vb.customize ["modifyvm", :id, "--nicpromisc#{i}", 'allow-all']
        vb.customize ["modifyvm", :id, "--nicpromisc#{o}", 'allow-all']
        vb.customize ["modifyvm", :id, "--nic#{i}", 'bridged', "--bridgeadapter#{i}", "v_soaked_t#{t}"]
        vb.customize ["modifyvm", :id, "--nic#{o}", 'bridged', "--bridgeadapter#{o}", "v_clean_t#{t}"]

      end

      provision(vendor)

    end

  end

  # VyOS Router Between team networks and target networks
  config.vm.define "rTarget" do |rTarget|
    rTarget.vm.box = "svigneux/vyos-1.0.2-amd64"
    rTarget.vm.guest = :debian
    rTarget.vm.hostname = 'rTarget'
    
    rTarget.vm.provider "virtualbox" do |vb|
      vb.customize ['modifyvm', :id, '--chipset', 'ich9']    # support 36 interfaces
      vb.customize ['modifyvm', :id, '--nictype1', 'virtio'] # set virtio for eth0 default interface
      vb.customize ['modifyvm', :id, '--nictype2', 'virtio'] # set virtio for eth1 - v_target
      # vyatta - configure 10.0.1.1
      vb.customize ["modifyvm", :id, "--nic2", 'bridged', "--bridgeadapter2", 'v_target']

      (1..$team_count).each do |t|
        i=t+2
        vb.customize ["modifyvm", :id, "--nicpromisc#{i}", 'allow-all']
        vb.customize ['modifyvm', :id, "--nictype#{i}", 'virtio'] # set virtio for all interfaces
        vb.customize ["modifyvm", :id, "--nic#{i}", 'bridged', "--bridgeadapter#{i}", "v_clean_t#{t}"]
      end

      provision(rTarget)

    end
  end

  config.vm.define "target1" do |target1|
    target1.vm.box = 'svigneux/kali-linux-1.0.6-amd64-mini'
    target1.vm.guest = :debian
    target1.vm.hostname = 'target1'
    target1.vm.network :public_network, nic_type: 'virtio', bridge: 'v_target', ip: "10.0.1.11", :use_dhcp_assigned_default_route => false
    target1.vm.provider "virtualbox" do |vb|
      vb.customize ['modifyvm', :id, '--nictype1', 'virtio']
      vb.customize ["modifyvm", :id, "--nicpromisc2", 'allow-all']
    end

    provision(target1)

  end
end
